[{"C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\index.js":"1","C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\App.js":"2","C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\screens\\HomeScreen.js":"3","C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\screens\\ProductScreen.js":"4","C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\components\\Header.js":"5","C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\components\\Footer.js":"6","C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\components\\Rating.js":"7","C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\components\\Product.js":"8","C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\store.js":"9","C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\reducers\\productReducers.js":"10","C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\constants\\productConstants.js":"11","C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\actions\\productActions.js":"12","C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\components\\Loader.js":"13","C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\components\\Message.js":"14","C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\screens\\CartScreen.js":"15","C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\reducers\\cartReducers.js":"16","C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\constants\\cartConstants.js":"17","C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\actions\\cartActions.js":"18","C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\reducers\\userReducers.js":"19","C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\constants\\userConstants.js":"20","C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\screens\\LoginScreen.js":"21","C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\components\\FormContainer.js":"22","C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\actions\\userActions.js":"23","C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\screens\\RegisterScreen.js":"24","C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\screens\\ProfileScreen.js":"25","C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\screens\\ShippingScreen.js":"26","C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\components\\CheckoutSteps.js":"27","C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\screens\\PaymentScreen.js":"28","C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\screens\\PlaceOrderScreen.js":"29","C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\reducers\\orderReducers.js":"30","C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\constants\\orderConstants.js":"31","C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\actions\\orderActions.js":"32","C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\screens\\OrderScreen.js":"33","C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\screens\\UserListScreen.js":"34","C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\screens\\UserEditScreen.js":"35","C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\screens\\ProductListScreen.js":"36","C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\screens\\ProductEditScreen.js":"37","C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\screens\\OrderListScreen.js":"38"},{"size":311,"mtime":1618139163467,"results":"39","hashOfConfig":"40"},{"size":2122,"mtime":1620948765718,"results":"41","hashOfConfig":"40"},{"size":887,"mtime":1618148336038,"results":"42","hashOfConfig":"40"},{"size":2491,"mtime":1618871372423,"results":"43","hashOfConfig":"40"},{"size":1854,"mtime":1620847924537,"results":"44","hashOfConfig":"40"},{"size":307,"mtime":1617914337626,"results":"45","hashOfConfig":"40"},{"size":1240,"mtime":1617914325067,"results":"46","hashOfConfig":"40"},{"size":756,"mtime":1617916045595,"results":"47","hashOfConfig":"40"},{"size":2094,"mtime":1620949999262,"results":"48","hashOfConfig":"40"},{"size":2406,"mtime":1620942228220,"results":"49","hashOfConfig":"40"},{"size":1054,"mtime":1620942694092,"results":"50","hashOfConfig":"40"},{"size":3471,"mtime":1620942532597,"results":"51","hashOfConfig":"40"},{"size":339,"mtime":1618150005174,"results":"52","hashOfConfig":"40"},{"size":259,"mtime":1618148245061,"results":"53","hashOfConfig":"40"},{"size":2340,"mtime":1619209993781,"results":"54","hashOfConfig":"40"},{"size":932,"mtime":1619273824390,"results":"55","hashOfConfig":"40"},{"size":236,"mtime":1619273707906,"results":"56","hashOfConfig":"40"},{"size":1171,"mtime":1619273837301,"results":"57","hashOfConfig":"40"},{"size":3303,"mtime":1620856721120,"results":"58","hashOfConfig":"40"},{"size":1508,"mtime":1620856603217,"results":"59","hashOfConfig":"40"},{"size":1891,"mtime":1619121911979,"results":"60","hashOfConfig":"40"},{"size":317,"mtime":1619113460286,"results":"61","hashOfConfig":"40"},{"size":5504,"mtime":1620858266119,"results":"62","hashOfConfig":"40"},{"size":2724,"mtime":1619121232494,"results":"63","hashOfConfig":"40"},{"size":4879,"mtime":1619468914038,"results":"64","hashOfConfig":"40"},{"size":2119,"mtime":1619212489756,"results":"65","hashOfConfig":"40"},{"size":1075,"mtime":1619212425474,"results":"66","hashOfConfig":"40"},{"size":1296,"mtime":1619273919639,"results":"67","hashOfConfig":"40"},{"size":3502,"mtime":1619288191268,"results":"68","hashOfConfig":"40"},{"size":3048,"mtime":1620949962747,"results":"69","hashOfConfig":"40"},{"size":1206,"mtime":1620949913121,"results":"70","hashOfConfig":"40"},{"size":4764,"mtime":1620950153764,"results":"71","hashOfConfig":"40"},{"size":7247,"mtime":1620950830095,"results":"72","hashOfConfig":"40"},{"size":2142,"mtime":1620854518407,"results":"73","hashOfConfig":"40"},{"size":2654,"mtime":1620858332400,"results":"74","hashOfConfig":"40"},{"size":3053,"mtime":1620912200665,"results":"75","hashOfConfig":"40"},{"size":4840,"mtime":1620946789194,"results":"76","hashOfConfig":"40"},{"size":1946,"mtime":1620949089435,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"157bct4",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"80"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"80"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"80"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"80"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"80"},"C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\index.js",[],["160","161"],"C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\App.js",[],"C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\screens\\HomeScreen.js",[],"C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\screens\\ProductScreen.js",[],"C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\components\\Header.js",[],"C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\components\\Product.js",[],"C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\store.js",[],"C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\components\\Message.js",[],"C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\screens\\CartScreen.js",[],"C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\actions\\userActions.js",["162"],"import { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USERS_DETAILS_RESET, USER_DETAILS_RESET, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_RESET, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL } from \"../constants/userConstants\"\r\nimport {ORDER_LIST_MY_RESET} from \"../constants/orderConstants\"\r\nimport axios from \"axios\"\r\nexport const login = (email, password) => async (dispatch) => {\r\n try {\r\n  dispatch({\r\n   type: USER_LOGIN_REQUEST\r\n  })\r\nconst config= {\r\n headers: {\r\n  \"Content-Type\": \"application/json\"\r\n  }\r\n }\r\n  const {data} = await axios.post(\"http://localhost:5000/users/login\",\r\n   {email, password},\r\n    config)\r\n  \r\ndispatch({\r\n type: USER_LOGIN_SUCCESS,\r\n payload: data\r\n})\r\n\r\nlocalStorage.setItem(\"userInfo\", JSON.stringify(data))\r\n}\r\n  catch (error) {\r\n   dispatch({\r\n  type: USER_LOGIN_FAIL,\r\n  payload: error.response && error.response.data.message\r\n   ? error.response.data.message\r\n    : error.message \r\n })\r\n } }\r\n\r\n\r\n export const logout = ()=> (dispatch) =>{\r\n   localStorage.removeItem(\"userInfo\")\r\n   dispatch({\r\n      type: USER_LOGOUT\r\n   })\r\n   dispatch({\r\n      type: USER_DETAILS_RESET\r\n   })\r\n   dispatch({\r\n      type: ORDER_LIST_MY_RESET\r\n   })\r\n   dispatch({\r\n      type: USER_LIST_RESET\r\n   })\r\n }\r\n\r\n\r\n\r\n export const register = (name, email, password) => async (dispatch) => {\r\n try {\r\n  dispatch({\r\n   type: USER_REGISTER_REQUEST\r\n  })\r\nconst config= {\r\n headers: {\r\n  \"Content-Type\": \"application/json\"\r\n  }\r\n }\r\n  const {data} = await axios.post(\"http://localhost:5000/users\",\r\n   {name, email, password},\r\n    config)\r\n  \r\ndispatch({\r\n type: USER_LOGIN_SUCCESS,\r\n payload: data\r\n})\r\n\r\nlocalStorage.setItem(\"userInfo\", JSON.stringify(data))\r\n}\r\n  catch (error) {\r\n   dispatch({\r\n  type: USER_REGISTER_FAIL,\r\n  payload: error.response && error.response.data.message\r\n   ? error.response.data.message\r\n    : error.message \r\n })\r\n } }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n export const getUserDetails = (id) => async (dispatch, getState) => {\r\n try {\r\n  dispatch({\r\n   type: USER_DETAILS_REQUEST\r\n  })\r\n\r\nconst {userLogin: {userInfo}} = getState()\r\n\r\nconst config= {\r\n headers: {\r\n  \"Content-Type\": \"application/json\",\r\n  Authorization: `Bearer ${userInfo.token}`\r\n  }\r\n }\r\n  const {data} = await axios.get(`http://localhost:5000/users/${id}`,\r\n    config)\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data\r\n    })\r\n\r\n}\r\n  catch (error) {\r\n   dispatch({\r\n  type: USER_DETAILS_FAIL,\r\n  payload: error.response && error.response.data.message\r\n   ? error.response.data.message\r\n    : error.message \r\n })\r\n } }\r\n\r\n\r\n\r\n\r\n \r\n export const updateUserProfile = (user) => async (dispatch, getState) => {\r\n try {\r\n  dispatch({\r\n   type: USER_UPDATE_PROFILE_REQUEST\r\n  })\r\n\r\nconst {userLogin: {userInfo}} = getState()\r\n\r\nconst config= {\r\n headers: {\r\n  \"Content-Type\": \"application/json\",\r\n  Authorization: `Bearer ${userInfo.token}`\r\n  }\r\n }\r\n  const {data} = await axios.put(`http://localhost:5000/users/profile`, user,\r\n    config)\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data\r\n    })\r\n\r\n}\r\n  catch (error) {\r\n   dispatch({\r\n  type: USER_UPDATE_PROFILE_FAIL,\r\n  payload: error.response && error.response.data.message\r\n   ? error.response.data.message\r\n    : error.message \r\n })\r\n } }\r\n\r\n\r\n\r\n \r\n export const listUsers = () => async (dispatch, getState) => {\r\n try {\r\n  dispatch({\r\n   type: USER_LIST_REQUEST\r\n  })\r\n\r\nconst {userLogin: {userInfo}} = getState()\r\n\r\nconst config= {\r\n headers: {\r\n  Authorization: `Bearer ${userInfo.token}`\r\n  }\r\n }\r\n  const {data} = await axios.get(`http://localhost:5000/users`,\r\n    config)\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data\r\n    })\r\n\r\n}\r\n  catch (error) {\r\n   dispatch({\r\n  type: USER_LIST_FAIL,\r\n  payload: error.response && error.response.data.message\r\n   ? error.response.data.message\r\n    : error.message \r\n })\r\n } }\r\n\r\n\r\n\r\n \r\n \r\n export const deleteUser = (id) => async (dispatch, getState) => {\r\n try {\r\n  dispatch({\r\n   type: USER_DELETE_REQUEST\r\n  })\r\n\r\nconst {userLogin: {userInfo}} = getState()\r\n\r\nconst config= {\r\n headers: {\r\n  Authorization: `Bearer ${userInfo.token}`\r\n  }\r\n }\r\n  await axios.delete(`http://localhost:5000/users/${id}`,\r\n    config)\r\n\r\n    dispatch({\r\n      type: USER_DELETE_SUCCESS,\r\n    })\r\n\r\n}\r\n  catch (error) {\r\n   dispatch({\r\n  type: USER_DELETE_FAIL,\r\n  payload: error.response && error.response.data.message\r\n   ? error.response.data.message\r\n    : error.message \r\n })\r\n } }\r\n\r\n\r\n\r\n\r\n  \r\n export const updateUser = (user) => async (dispatch, getState) => {\r\n try {\r\n  dispatch({\r\n   type: USER_UPDATE_REQUEST\r\n  })\r\n\r\nconst {userLogin: {userInfo}} = getState()\r\n\r\nconst config= {\r\n headers: {\r\n   \"Content-Type\": \"application/json\",\r\n  Authorization: `Bearer ${userInfo.token}`\r\n  }\r\n }\r\n const {data} = await axios.put(`http://localhost:5000/users/${user._id}`, user,\r\n    config)\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_SUCCESS,\r\n    })\r\n     dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data\r\n    })\r\n\r\n}\r\n  catch (error) {\r\n   dispatch({\r\n  type: USER_UPDATE_FAIL,\r\n  payload: error.response && error.response.data.message\r\n   ? error.response.data.message\r\n    : error.message \r\n })\r\n } }","C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\screens\\RegisterScreen.js",[],"C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\screens\\ProfileScreen.js",[],"C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\screens\\ShippingScreen.js",[],"C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\screens\\PaymentScreen.js",[],"C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\screens\\PlaceOrderScreen.js",["163","164"],"import React, { useEffect} from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card} from \"react-bootstrap\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {Link} from \"react-router-dom\"\r\n\r\n\r\nimport {createOrder} from \"../actions/orderActions\"\r\nimport {saveShippingAddress} from \"../actions/cartActions\"\r\nimport Message from \"../components/Message\"\r\nimport CheckoutSteps from \"../components/CheckoutSteps\"\r\n\r\n\r\nconst PlaceOrderScreen = ({history}) => {\r\n\r\n  const dispatch = useDispatch()\r\nconst cart = useSelector(state => state.cart)\r\n\r\n    const addDecimals = (num) => {\r\n        return (Math.round(num * 100) / 100).toFixed(2)\r\n     }\r\n\r\ncart.itemsPrice = addDecimals(cart.cartItems.reduce(\r\n  (acc, item)=>acc + item.price * item.qty,\r\n     0))\r\n\r\n     cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n\r\n          cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\ncart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n \r\nconst orderCreate = useSelector(state => state.orderCreate)\r\nconst {order, success, error} = orderCreate\r\n\r\nuseEffect(()=>{\r\nif(success) {\r\n  history.push(`/order/${order._id}`)\r\n}\r\n}, [history, success])\r\n\r\nconst placeOrderHandler = ()=> {\r\n dispatch(createOrder({\r\n   orderItems: cart.cartItems,\r\n   shippingAddress: cart.shippingAddress,\r\n   paymentMethod: cart.paymentMethod,\r\n   itemsPrice: cart.itemsPrice,\r\n   shippingPrice: cart.shippingPrice,\r\n   taxPrice: cart.taxPrice,\r\n   totalPrice: cart.totalPrice\r\n }))\r\n}\r\n\r\n return (\r\n  <>\r\n     <CheckoutSteps step1 step2 step3 step4 />\r\n<Row>\r\n<Col md={8}>\r\n<ListGroup variant=\"flush\">\r\n<ListGroup.Item>\r\n<h2>Shipping</h2>\r\n<p><strong>Address:</strong></p>\r\n{cart.shippingAddress.address}, {cart.shippingAddress.city} {cart.shippingAddress.postalCode}, {cart.shippingAddress.country}\r\n</ListGroup.Item>\r\n\r\n<ListGroup.Item>\r\n<h2>Payment Method</h2>\r\n<strong>Method:</strong>\r\n{cart.paymentMethod}\r\n</ListGroup.Item>\r\n\r\n<ListGroup.Item>\r\n<h2>Order Items</h2>\r\n{cart.cartItems.length === 0 ? <Message>Your Cart Is Empty</Message> : (\r\n <ListGroup variant=\"flush\">\r\n  {cart.cartItems.map((item, i)=>(\r\n   <ListGroup.Item key={i}>\r\n   <Row>\r\n   <Col md={1}>\r\n   <Image  src={item.image} alt={item.name} fluid rounded/>\r\n   </Col>\r\n   <Col>\r\n  <Link to={`/product/${item.product}`}>{item.name}</Link> \r\n   </Col>\r\n   <Col md={4}>{item.qty} x {item.price} = ${item.qty * item.price}</Col>\r\n   </Row>\r\n   </ListGroup.Item>\r\n  ))}\r\n </ListGroup>\r\n)}\r\n</ListGroup.Item>\r\n\r\n</ListGroup>\r\n</Col>\r\n<Col md={4}>\r\n<Card>\r\n<ListGroup variant=\"flush\">\r\n\r\n<ListGroup.Item>\r\n<h2>\r\nOrder Summary\r\n</h2>\r\n</ListGroup.Item>\r\n\r\n<ListGroup.Item>\r\n<Row>\r\n<Col>\r\nItems\r\n</Col>\r\n<Col>\r\n${cart.itemsPrice}\r\n</Col>\r\n</Row>\r\n</ListGroup.Item>\r\n\r\n\r\n<ListGroup.Item>\r\n<Row>\r\n<Col>\r\nShipping\r\n</Col>\r\n<Col>\r\n${cart.shippingPrice}\r\n</Col>\r\n</Row>\r\n</ListGroup.Item>\r\n\r\n\r\n<ListGroup.Item>\r\n<Row>\r\n<Col>\r\nTax\r\n</Col>\r\n<Col>\r\n${cart.taxPrice}\r\n</Col>\r\n</Row>\r\n</ListGroup.Item> \r\n\r\n\r\n<ListGroup.Item>\r\n<Row>\r\n<Col>\r\nTotal\r\n</Col>\r\n<Col>\r\n${cart.totalPrice}\r\n</Col>\r\n</Row>\r\n</ListGroup.Item>\r\n<ListGroup.Item>\r\n{error && <Message variant=\"danger\">{error}</Message>}\r\n</ListGroup.Item>\r\n<ListGroup.Item>\r\n<Button type=\"button\" className=\"btn-block\" disabled={cart.cartItems === 0} onClick={placeOrderHandler} >Place Order</Button>\r\n</ListGroup.Item>\r\n\r\n</ListGroup>\r\n</Card>\r\n</Col>\r\n\r\n</Row>\r\n  </>\r\n )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\actions\\orderActions.js",["165","166","167"],"import {ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_SUCCESS, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_FAIL} from \"../constants/orderConstants\"\r\nimport axios from \"axios\"\r\n\r\n export const createOrder = (order) => async (dispatch, getState) => {\r\n try {\r\n  dispatch({\r\n   type: ORDER_CREATE_REQUEST\r\n  })\r\n\r\nconst {userLogin: {userInfo}} = getState()\r\n\r\nconst config= {\r\n headers: {\r\n  \"Content-Type\": \"application/json\",\r\n  Authorization: `Bearer ${userInfo.token}`\r\n  }\r\n }\r\n  const {data} = await axios.post(`http://localhost:5000/orders`, order,\r\n    config)\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data\r\n    })\r\n\r\n}\r\n  catch (error) {\r\n   dispatch({\r\n  type: ORDER_CREATE_FAIL,\r\n  payload: error.response && error.response.data.message\r\n   ? error.response.data.message\r\n    : error.message  \r\n })\r\n } }\r\n\r\n\r\n\r\n \r\n export const getOrderDetails = (id) => async (dispatch, getState) => {\r\n try {\r\n  dispatch({\r\n   type: ORDER_DETAILS_REQUEST\r\n  })\r\n\r\nconst {userLogin: {userInfo}} = getState()\r\n\r\nconst config= {\r\n headers: {\r\n  Authorization: `Bearer ${userInfo.token}`\r\n  }\r\n }\r\n  const {data} = await axios.get(`http://localhost:5000/orders/${id}`,\r\n    config)\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data\r\n    })\r\n\r\n}\r\n  catch (error) {\r\n   dispatch({\r\n  type: ORDER_DETAILS_FAIL,\r\n  payload: error.response && error.response.data.message\r\n   ? error.response.data.message\r\n    : error.message  \r\n })\r\n } }\r\n\r\n \r\n export const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n try {\r\n  dispatch({\r\n   type: ORDER_PAY_REQUEST\r\n  })\r\n\r\nconst {userLogin: {userInfo}} = getState()\r\n\r\nconst config= {\r\n headers: {\r\n   \"Content-Type\": \"application/json\",\r\n  Authorization: `Bearer ${userInfo.token}`\r\n  }\r\n }\r\n  const {data} = await axios.put(`http://localhost:5000/orders/${orderId}/pay`, paymentResult,\r\n    config)\r\n\r\n    dispatch({\r\n      type: ORDER_PAY_SUCCESS,\r\n      payload: data\r\n    })\r\n\r\n}\r\n  catch (error) {\r\n   dispatch({\r\n  type: ORDER_PAY_FAIL,\r\n  payload: error.response && error.response.data.message\r\n   ? error.response.data.message\r\n    : error.message  \r\n })\r\n } }\r\n\r\n\r\n\r\n export const deliverOrder = (order) => async (dispatch, getState) => {\r\n try {\r\n  dispatch({\r\n   type: ORDER_DELIVER_REQUEST\r\n  })\r\n\r\nconst {userLogin: {userInfo}} = getState()\r\n\r\nconst config= {\r\n headers: {\r\n  Authorization: `Bearer ${userInfo.token}`\r\n  }\r\n }\r\n  const {data} = await axios.put(`http://localhost:5000/orders/${order._id}/deliver`, {},\r\n    config)\r\n\r\n    dispatch({\r\n      type: ORDER_DELIVER_SUCCESS,\r\n      payload: data\r\n    })\r\n\r\n}\r\n  catch (error) {\r\n   dispatch({\r\n  type: ORDER_DELIVER_FAIL,\r\n  payload: error.response && error.response.data.message\r\n   ? error.response.data.message\r\n    : error.message  \r\n })\r\n } }\r\n\r\n\r\n\r\n\r\n\r\n \r\n export const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`http://localhost:5000/orders/myorders`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    // if (message === 'Not authorized, token failed') {\r\n    //   dispatch(logout())\r\n    // }\r\n    // dispatch({\r\n    //   type: ORDER_LIST_MY_FAIL,\r\n    //   payload: message,\r\n    // })\r\n  }\r\n}\r\n\r\n\r\n export const listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`http://localhost:5000/orders`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    // if (message === 'Not authorized, token failed') {\r\n    //   dispatch(logout())\r\n    // }\r\n    // dispatch({\r\n    //   type: ORDER_LIST_FAIL,\r\n    //   payload: message,\r\n    // })\r\n  }\r\n}","C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\screens\\OrderScreen.js",["168"],"C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\screens\\UserListScreen.js",[],"C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\screens\\UserEditScreen.js",[],"C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\screens\\ProductListScreen.js",[],"C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\screens\\ProductEditScreen.js",["169"],"import axios from \"axios\"\r\nimport React, {useState, useEffect} from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nimport {Form, Button} from \"react-bootstrap\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport {listProductDetails, updateProduct} from \"../actions/productActions\"\r\nimport FormContainer from \"../components/FormContainer\"\r\nimport {PRODUCT_UPDATE_RESET} from \"../constants/productConstants\"\r\n\r\nconst ProductEditScreen = ({match, history}) => {\r\n const productId = match.params.id\r\n\r\nconst [name, setName] = useState(\"\")\r\nconst [price, setPrice] = useState(0)\r\nconst [image, setImage] = useState(\"\")\r\nconst [brand, setBrand] = useState(\"\")\r\nconst [description, setDescription] = useState(\"\")\r\nconst [uploading, setUploading] = useState(false)\r\nconst [category, setCategory] = useState(\"\")\r\nconst [countInStock, setCountInStock] = useState(0)\r\n\r\nconst dispatch = useDispatch()\r\nconst productDetails = useSelector((state) => state.productDetails)\r\nconst {loading, error, product} = productDetails\r\n\r\nconst productUpdate = useSelector((state) => state.productUpdate)\r\nconst {loading: loadingUpdate, error: errorUpdate, success: successUpdate} = productUpdate\r\n\r\n\r\n\r\nuseEffect(()=>{\r\n\r\nif (successUpdate) {\r\n   dispatch({type: PRODUCT_UPDATE_RESET})\r\n   history.push(\"/admin/productlist\")\r\n} else {\r\n   if (!product.name || product._id !== productId) {\r\n  dispatch(listProductDetails(productId))\r\n } else {\r\n  setName(product.name)\r\n  setPrice(product.price) \r\n  setImage(product.image) \r\n  setBrand(product.brand) \r\n  setCategory(product.categoty) \r\n  setCountInStock(product.countInStock) \r\n  setDescription(product.description) \r\n }\r\n}\r\n\r\n }, [dispatch, productId, history, product, successUpdate])\r\n\r\nconst submitHandler = (e) => {\r\n e.preventDefault()\r\ndispatch(updateProduct({\r\n   _id: productId,\r\n   name,\r\n   price,\r\n   image,\r\n   brand,\r\n   category,\r\n   description,\r\n   countInStock\r\n}))\r\n}\r\n\r\nconst uploadFileHandler = async (e)=>{\r\n   const file = e.target.files[0]\r\n   const formData = new FormData()\r\n   formData.append(\"image\", file)\r\n   setUploading(true)\r\n\r\n   try {\r\n      const config = {\r\n         headers: {\r\n            \"Content-Type\": \"multipart/form-data\"\r\n         }\r\n      }\r\n      const {data} = await axios.post(\"http://localhost:5000/upload\", formData, config)\r\n      setImage(data)\r\n      setUploading(false)\r\n   } catch (error) {\r\n      console.error(error)\r\n      setUploading(false)\r\n   }\r\n}\r\n\r\n return (\r\n\r\n<>\r\n<Link to=\"/admin/productlist\" className=\"btn btn-ligth my-3\" >\r\nGo Back\r\n</Link>\r\n  <FormContainer>\r\n   <h1>Edit Product</h1>\r\n{loadingUpdate && <Loader />}\r\n{errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n    {loading? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> : (\r\n<Form onSubmit={submitHandler}>\r\n   \r\n   <Form.Group controlId=\"name\">\r\n    <Form.Label>Name</Form.Label> \r\n    <Form.Control type=\"name\" placeholder=\"Enter name\" value={name} onChange = {(e)=> setName(e.target.value)}></Form.Control>\r\n   </Form.Group>\r\n   \r\n\r\n   <Form.Group controlId=\"price\">\r\n    <Form.Label>Price</Form.Label> \r\n    <Form.Control type=\"number\" placeholder=\"Enter price\" value={price} onChange = {(e)=> setPrice(e.target.value)}></Form.Control>\r\n   </Form.Group>\r\n   \r\n\r\n   <Form.Group controlId=\"image\">\r\n   <Form.Label>Image</Form.Label> \r\n    <Form.Control type=\"text\" placeholder=\"Enter image url\" value={image} onChange = {(e)=> setImage(e.target.value)}></Form.Control>\r\n      <Form.File id=\"image-file\" label=\"Choose File\" custom onChange={uploadFileHandler}></Form.File>\r\n   </Form.Group>\r\n\r\n   \r\n<Form.Group controlId=\"brand\">\r\n   <Form.Label>Brand</Form.Label> \r\n    <Form.Control type=\"text\" placeholder=\"Enter brand \" value={brand} onChange = {(e)=> setBrand(e.target.value)}></Form.Control>\r\n   </Form.Group>\r\n\r\n\r\n    <Form.Group controlId=\"countInStock\">\r\n    <Form.Label>Count In Stock</Form.Label> \r\n    <Form.Control type=\"number\" placeholder=\"Enter countInStock\" value={countInStock} onChange = {(e)=> setCountInStock(e.target.value)}></Form.Control>\r\n   </Form.Group>\r\n\r\n   <Form.Group controlId=\"category\">\r\n   <Form.Label>Category</Form.Label> \r\n    <Form.Control type=\"text\" placeholder=\"Enter category \" value={category} onChange = {(e)=> setCategory(e.target.value)}></Form.Control>\r\n   </Form.Group>\r\n\r\n   <Form.Group controlId=\"description\">\r\n   <Form.Label>Description</Form.Label> \r\n    <Form.Control type=\"text\" placeholder=\"Enter description\" value={description} onChange = {(e)=> setDescription(e.target.value)}></Form.Control>\r\n   </Form.Group>\r\n   \r\n\r\n   \r\n   <Button type=\"submit\" variant=\"primary\">Update</Button>\r\n   \r\n   </Form>\r\n   )}\r\n   \r\n\r\n\r\n  </FormContainer>\r\n</>\r\n\r\n\r\n )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","C:\\Users\\user\\Desktop\\proshop\\frontend\\src\\screens\\OrderListScreen.js",["170"],"import React, { useEffect} from 'react'\r\nimport {LinkContainer} from \"react-router-bootstrap\"\r\nimport {Table, Button} from \"react-bootstrap\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport {listOrders, deleteUser} from \"../actions/orderActions\"\r\n\r\nconst OrderListScreen = ({history}) => {\r\nconst dispatch = useDispatch()\r\n\r\nconst orderList = useSelector(state => state.orderList)\r\nconst {loading, error, orders} = orderList\r\n\r\nconst userLogin = useSelector(state => state.userLogin)\r\nconst {userInfo} = userLogin\r\n\r\nuseEffect(()=>{\r\nif (userInfo && userInfo.isAdmin){\r\n dispatch(listOrders())\r\n} else  {\r\n history.push(\"/login\")\r\n}\r\n\r\n}, [dispatch, history, userInfo])\r\n\r\n return (\r\n  <>\r\n   <h1>Orders</h1>\r\n   {loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> : (\r\n\r\n    <Table striped bordered hover responsive className=\"table-sm\">\r\n    <thead>\r\n    <tr>\r\n    <th>ID</th>\r\n    <th>USER</th>\r\n    <th>DATE</th>\r\n    <th>TOTAL</th>\r\n    <th>PAID</th>\r\n    <th>DELIVERED</th>\r\n    <th></th>\r\n    </tr>\r\n    </thead>\r\n    <tbody>\r\n    {orders.map(order => (\r\n     <tr key={order._id}>\r\n     <td>{order._id}</td>\r\n     <td>{order.user && order.user.name}</td>\r\n     <td>{order.createdAt.substring(0,10)}</td>\r\n     <td>${order.totalPrice}</td>\r\n     <td>{order.isPaid ? (order.paidAt.substring(0,10)): (\r\n      <i className=\"fas fa-times\" style={{color: \"red\"}}></i>\r\n     )}</td>\r\n      <td>{order.isDelivered ? (order.deliveredAt.substring(0,10)): (\r\n      <i className=\"fas fa-times\" style={{color: \"red\"}}></i>\r\n     )}</td>\r\n     <td>\r\n     <LinkContainer to={`/order/${order._id}`}>\r\n     <Button variant=\"light\" className=\"btn-sm\">\r\n     Details\r\n     </Button>\r\n     </LinkContainer>\r\n\r\n     \r\n     </td>\r\n     </tr>\r\n    ))}\r\n    </tbody>\r\n    </Table>\r\n   ) }\r\n  </>\r\n )\r\n}\r\n\r\nexport default OrderListScreen\r\n",{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","severity":1,"message":"176","line":1,"column":270,"nodeType":"177","messageId":"178","endLine":1,"endColumn":289},{"ruleId":"175","severity":1,"message":"179","line":8,"column":9,"nodeType":"177","messageId":"178","endLine":8,"endColumn":28},{"ruleId":"180","severity":1,"message":"181","line":38,"column":4,"nodeType":"182","endLine":38,"endColumn":22,"suggestions":"183"},{"ruleId":"175","severity":1,"message":"184","line":1,"column":215,"nodeType":"177","messageId":"178","endLine":1,"endColumn":233},{"ruleId":"175","severity":1,"message":"185","line":164,"column":11,"nodeType":"177","messageId":"178","endLine":164,"endColumn":18},{"ruleId":"175","severity":1,"message":"185","line":202,"column":11,"nodeType":"177","messageId":"178","endLine":202,"endColumn":18},{"ruleId":"180","severity":1,"message":"186","line":77,"column":6,"nodeType":"182","endLine":77,"endColumn":60,"suggestions":"187"},{"ruleId":"175","severity":1,"message":"188","line":20,"column":8,"nodeType":"177","messageId":"178","endLine":20,"endColumn":17},{"ruleId":"175","severity":1,"message":"189","line":7,"column":21,"nodeType":"177","messageId":"178","endLine":7,"endColumn":31},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],"no-unused-vars","'USERS_DETAILS_RESET' is defined but never used.","Identifier","unusedVar","'saveShippingAddress' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.","ArrayExpression",["192"],"'ORDER_LIST_MY_FAIL' is defined but never used.","'message' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.",["193"],"'uploading' is assigned a value but never used.","'deleteUser' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},"Update the dependencies array to be: [history, order._id, success]",{"range":"198","text":"199"},"Update the dependencies array to be: [dispatch, orderId, successPay, successDeliver, order, userInfo, history]",{"range":"200","text":"201"},[1229,1247],"[history, order._id, success]",[2362,2416],"[dispatch, orderId, successPay, successDeliver, order, userInfo, history]"]